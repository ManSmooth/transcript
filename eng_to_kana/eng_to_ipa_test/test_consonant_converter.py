import os
import sys
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
import unittest
from eng_to_ipa.consonant_converter import ConsonantConverter

class TestConsonantConverter(unittest.TestCase):
    def setUp(self):
        self.func = ConsonantConverter().convertConsonant

    def test_1(self):
        words = [
            'father',
            'arm',
            'commander',
            'she',
            'pig',
            'bed',
            'bird',
            'hamburger',
            'cat',
            'gamble',
            'gal',
            'country',
            'monkey',
            'front',
            'london',
            'box',
            'straw',
            'port',
            'book',
            'balloon',
            'about',
            'pilot',
            'winner',
            'mama',
            'puma',
            'day',
            'david',
            'my',
            'boy',
            'toy',
            'phone',
            'no',
            'now',
            'queer',
            'hair',
            'tour',
            'cube',
            'amazon',
            'boxing',
            'google',
            'microsoft',
            'nation',
            'roma',
            'wood',
            'woods',
            'thin',
            'left',
            'milk',
            'song',
            'darling',
            'yeast',
            'yes',
            'hoop',
            'pop',
            'cut',
            'pack',
            'kiss',
            'patch',
            'mesh'
        ]
        pairs = {
            'father': 'faðaa',
            'arm': 'aam',
            'commander': 'komandaa',
            'she': 'ʃii',
            'pig': 'pig',
            'bed': 'bed',
            'bird': 'baad',
            'hamburger': 'hambaagaa', 
            'cat': 'kyat',
            'gamble': 'gyambul',
            'gal': 'gyal',
            'country': 'kantɹii',
            'monkey': 'moŋkii',
            'front': 'fɹont',
            'london': 'london',
            'box': 'boks',
            'straw': 'stɹo',
            'port': 'poot',
            'book': 'buk',
            'balloon': 'baluun',
            'about': 'abaut',
            'pilot': 'pailot',
            'winner': 'winaa',
            'mama': 'mama',
            'puma': 'puuma',
            'day': 'dei',
            'david': 'deivid',
            'my': 'mai',
            'boy': 'boi',
            'toy': 'toi',
            'phone': 'foon',
            'no': 'noo',
            'now': 'nau',
            'queer': 'kwiaa',
            'hair': 'heaa',
            'tour': 'tuaa',
            'cube': 'kyuub',
            'amazon': 'amazoˌn',
            'boxing': 'boksiŋ',
            'google': 'guugul',
            'microsoft': 'maikɹooˌsoft',
            'nation': 'neiʃon',
            'roma': 'ɹooma',
            'wood': 'wud',
            'woods': 'wudz',
            'thin': 'θin',
            'left': 'left',
            'milk': 'milk',
            'song': 'soŋ',
            'darling': 'daaliŋ',
            'yeast': 'iist',
            'yes': 'ies',
            'hoop': 'huup',
            'pop': 'pop',
            'cut': 'kat',
            'pack': 'pak',
            'kiss': 'kis',
            'patch': 'paʧ',
            'mesh': 'meʃ'
            }
        expected_pair = {
            'faðaa': 'fazaa',
            'aam': 'aam',
            'komandaa': 'komaNdaa',
            'ʃii': 'shii',
            'pig': 'pigg',
            'bed': 'bedd',
            'baad': 'baad',
            'hambaagaa': 'haNbaagaa',
            'kyat': 'kyatt',
            'gyambul': 'gyaNbur',
            'gyal': 'gyar',
            'kantɹii': 'kaNtrii',
            'moŋkii': 'moNkii',
            'fɹont': 'froNt',
            'london': 'roNdoN',
            'boks': 'bokks',
            'stɹo': 'stro',
            'poot': 'poot',
            'buk': 'bukk',
            'baluun': 'baruuN',
            'abaut': 'abaut',
            'pailot': 'pairott',
            'winaa': 'winaa',
            'mama': 'mama',
            'puuma': 'puuma',
            'dei': 'dei',
            'deivid': 'deibidd',
            'mai': 'mai',
            'boi': 'boi',
            'toi': 'toi',
            'foon': 'fooN',
            'noo': 'noo',
            'nau': 'nau',
            'kwiaa': 'kwiaa',
            'heaa': 'heaa',
            'tuaa': 'tuaa',
            'kyuub': 'kyuub',
            'amazoˌn': 'amazoN',
            'boksiŋ': 'bokksiNg',
            'guugul': 'guugur',
            'maikɹooˌsoft': 'maikroosoft',
            'neiʃon': 'neishoN',
            'ɹooma': 'rooma',
            'wud': 'wudd',
            'wudz': 'wuzz',
            'θin': 'siN',
            'left': 'reft',
            'milk': 'mirk',
            'soŋ': 'soNg',
            'daaliŋ': 'daariNg',
            'iist': 'iist',
            'ies': 'ies',
            'huup': 'huup',
            'pop': 'popp',
            'kat': 'katt',
            'pak': 'pakk',
            'kis': 'kis',
            'paʧ': 'pacch',
            'meʃ': 'messh'
        }
        for w in words:
            ph = pairs[w]
            expected = expected_pair[pairs[w]]
            self.assertEqual(expected, self.func(w, ph))

if __name__ == '__main__':
    unittest.main()